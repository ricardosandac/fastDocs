Voc√™ ir√° criar uma documenta√ß√£o t√©cnica automatizada para um projeto Salesforce com estrutura padr√£o (force-app/main/default). A documenta√ß√£o ser√° gerada em formato compat√≠vel com GitHub Pages, usando Markdown.

‚öôÔ∏è Regras de execu√ß√£o:

Varredura completa

Percorra recursivamente todas as pastas e arquivos a partir da raiz do projeto (./).
N√£o filtre por extens√£o: analise qualquer arquivo que fa√ßa parte da l√≥gica ou estrutura Salesforce (ex: .cls, .trigger, .apex, .page, .cmp, .lwc, .xml, .html, .json, etc).
Inclua pastas como classes, triggers, lwc, aura, objects, layouts, flows, permissionsets.
An√°lise por arquivo

Analise cada arquivo individualmente, em sequ√™ncia, sem pular nenhum.
Extraia:
Nome, caminho e tipo do arquivo.
Descri√ß√£o geral baseada no conte√∫do e coment√°rios.
Classes, m√©todos, atributos, eventos e metadados relevantes.
Chaves de configura√ß√£o, rotas, refer√™ncias externas (Apex, Lightning, etc).
Relacionamentos com outros arquivos (importa√ß√µes, heran√ßa, chamadas de m√©todo).
Exemplos contextualizados

Para cada fun√ß√£o, m√©todo ou componente, gere exemplos em bloco de c√≥digo Markdown. (Utilize quantos exemplos forem necessarios para passar o contexto total da classe)
O exemplo deve:
Estar dentro de uma se√ß√£o ### Exemplo de Uso.
Ter contexto expl√≠cito do cen√°rio em que seria aplicado (ex: ‚ÄúEste m√©todo √© usado no componente X para validar o input do formul√°rio de contato‚Äù).
Mostrar entrada e sa√≠da (se aplic√°vel).
Ser um trecho funcional, n√£o pseudoc√≥digo.
Relacionamentos e linkagem

Ao detectar rela√ß√£o entre componentes, como:
Um LWC chamando outro.
Um trigger usando uma classe utilit√°ria.
Um m√©todo Apex sendo usado em outro arquivo.
Permission sets, profiles, objetos e etc
Crie um link na documenta√ß√£o do tipo:
Veja tamb√©m: NomeDoOutroComponente
Adicione essa refer√™ncia ao final da se√ß√£o correspondente, sob um t√≠tulo ### Relacionamentos.
O objetivo √© navegabilidade entre arquivos documentados.
Gera√ß√£o dos arquivos Markdown

Para cada arquivo, crie um .md correspondente dentro da pasta /docs, espelhando a estrutura de pastas original.

Use estrutura padr√£o de Markdown com se√ß√µes:

Utilize o cabe√ßalho Jekyll se necess√°rio:

P√°gina √≠ndice

Crie um index.md com um √≠ndice completo dos arquivos documentados.
Separe por tipo: Classes Apex, Triggers, Componentes Lightning, Configura√ß√µes XML, etc.
Todos os t√≠tulos devem ser links para seus respectivos arquivos .md.
üéØ Objetivo final:
Documentar todo o projeto Salesforce, com exemplos pr√°ticos, contexto de uso e rela√ß√µes entre os elementos, gerando uma refer√™ncia naveg√°vel e profissional via GitHub Pages. Nenhum arquivo deve ser ignorado. Toda a documenta√ß√£o deve ser feita em portugues brasileiro.
Todos os documentos .md devem ser armazenados na pasta docs